<?php
namespace coiffuresenegal\Dao\Bean;
use Database\TDBM\TDBMObject;


/*
 * This file has been automatically generated by TDBM.
 * DO NOT edit this file, as it might be overwritten.
 * If you need to perform changes, edit the DiaporamaBean class instead!
 */

/**
 * The DiaporamaBaseBean class maps the 'diaporama' table in database.
 * @dbTable diaporama
 */
class DiaporamaBaseBean extends TDBMObject
{
	/**
	 * The getter for the "ID_diaporama" column.
	 *
	 * @dbType int
	 * @dbColumn ID_diaporama
	 * @return string
	 */
	public function getIDDiaporama(){
		return $this->__get('ID_diaporama');
	}
	
	/**
	 * The setter for the "ID_diaporama" column.
	 *
	 * @dbColumn ID_diaporama
	 * @param string $ID_diaporama
	 */
	public function setIDDiaporama($ID_diaporama) {
		$this->__set('ID_diaporama', $ID_diaporama);
	}
	
	/**
	 * The getter for the "ID_article" column.
	 *
	 * @dbType int
	 * @dbColumn ID_article
	 * @return string
	 */
	public function getIDArticle(){
		return $this->__get('ID_article');
	}
	
	/**
	 * The setter for the "ID_article" column.
	 *
	 * @dbColumn ID_article
	 * @param string $ID_article
	 */
	public function setIDArticle($ID_article) {
		$this->__set('ID_article', $ID_article);
	}
	
	/**
	 * The getter for the "nom_diaporama" column.
	 *
	 * @dbType string
	 * @dbColumn nom_diaporama
	 * @return string
	 */
	public function getNomDiaporama(){
		return $this->__get('nom_diaporama');
	}
	
	/**
	 * The setter for the "nom_diaporama" column.
	 *
	 * @dbColumn nom_diaporama
	 * @param string $nom_diaporama
	 */
	public function setNomDiaporama($nom_diaporama) {
		$this->__set('nom_diaporama', $nom_diaporama);
	}
	
	/**
	 * The getter for the "notice" column.
	 *
	 * @dbType string
	 * @dbColumn notice
	 * @return string
	 */
	public function getNotice(){
		return $this->__get('notice');
	}
	
	/**
	 * The setter for the "notice" column.
	 *
	 * @dbColumn notice
	 * @param string $notice
	 */
	public function setNotice($notice) {
		$this->__set('notice', $notice);
	}
	
	/**
	 * The getter for the "actif" column.
	 *
	 * @dbType int
	 * @dbColumn actif
	 * @return string
	 */
	public function getActif(){
		return $this->__get('actif');
	}
	
	/**
	 * The setter for the "actif" column.
	 *
	 * @dbColumn actif
	 * @param string $actif
	 */
	public function setActif($actif) {
		$this->__set('actif', $actif);
	}
	
	/**
	 * The getter for the "created_at" column.
	 * It is returned as a PHP timestamp.
	 *
	 * @dbType datetime
	 * @dbColumn created_at
	 * @return timestamp
	 */
	public function getCreatedAt(){
		$date = $this->__get('created_at');
		if($date === null)
			return null;
		else
			return strtotime($date);
	}
	
	/**
	 * The setter for the "created_at" column.
	 * It must be provided as a PHP timestamp.
	 *
	 * @dbColumn created_at
	 * @param timestamp $created_at
	 */
	public function setCreatedAt($created_at) {
		if($created_at === null)
			$this->__set('created_at', null);
		else
			$this->__set('created_at', date("Y-m-d H:i:s", $created_at));
	}
	
	/**
	 * The getter for the "updated_at" column.
	 * It is returned as a PHP timestamp.
	 *
	 * @dbType timestamp
	 * @dbColumn updated_at
	 * @return timestamp
	 */
	public function getUpdatedAt(){
		$date = $this->__get('updated_at');
		if($date === null)
			return null;
		else
			return strtotime($date);
	}
	
	/**
	 * The setter for the "updated_at" column.
	 * It must be provided as a PHP timestamp.
	 *
	 * @dbColumn updated_at
	 * @param timestamp $updated_at
	 */
	public function setUpdatedAt($updated_at) {
		if($updated_at === null)
			$this->__set('updated_at', null);
		else
			$this->__set('updated_at', date("Y-m-d H:i:s", $updated_at));
	}
	
}
?>