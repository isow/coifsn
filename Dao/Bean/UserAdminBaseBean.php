<?php
namespace coiffuresenegal\Dao\Bean;

use Database\TDBM\TDBMObject;


/*
 * This file has been automatically generated by TDBM.
 * DO NOT edit this file, as it might be overwritten.
 * If you need to perform changes, edit the UserAdminBean class instead!
 */

/**
 * The UserAdminBaseBean class maps the 'user_admin' table in database.
 * @dbTable user_admin
 */
class UserAdminBaseBean extends TDBMObject
{
	/**
	 * The getter for the "ID_user_admin" column.
	 *
	 * @dbType int
	 * @dbColumn ID_user_admin
	 * @return string
	 */
	public function getIDUserAdmin(){
		return $this->__get('ID_user_admin');
	}
	
	/**
	 * The setter for the "ID_user_admin" column.
	 *
	 * @dbColumn ID_user_admin
	 * @param string $ID_user_admin
	 */
	public function setIDUserAdmin($ID_user_admin) {
		$this->__set('ID_user_admin', $ID_user_admin);
	}
	
	/**
	 * The getter for the "user_nom" column.
	 *
	 * @dbType string
	 * @dbColumn user_nom
	 * @return string
	 */
	public function getUserNom(){
		return $this->__get('user_nom');
	}
	
	/**
	 * The setter for the "user_nom" column.
	 *
	 * @dbColumn user_nom
	 * @param string $user_nom
	 */
	public function setUserNom($user_nom) {
		$this->__set('user_nom', $user_nom);
	}
	
	/**
	 * The getter for the "user_login" column.
	 *
	 * @dbType string
	 * @dbColumn user_login
	 * @return string
	 */
	public function getUserLogin(){
		return $this->__get('user_login');
	}
	
	/**
	 * The setter for the "user_login" column.
	 *
	 * @dbColumn user_login
	 * @param string $user_login
	 */
	public function setUserLogin($user_login) {
		$this->__set('user_login', $user_login);
	}
	
	/**
	 * The getter for the "user_password" column.
	 *
	 * @dbType string
	 * @dbColumn user_password
	 * @return string
	 */
	public function getUserPassword(){
		return $this->__get('user_password');
	}
	
	/**
	 * The setter for the "user_password" column.
	 *
	 * @dbColumn user_password
	 * @param string $user_password
	 */
	public function setUserPassword($user_password) {
		$this->__set('user_password', $user_password);
	}
	
	/**
	 * The getter for the "est_administrateur" column.
	 *
	 * @dbType int
	 * @dbColumn est_administrateur
	 * @return string
	 */
	public function getEstAdministrateur(){
		return $this->__get('est_administrateur');
	}
	
	/**
	 * The setter for the "est_administrateur" column.
	 *
	 * @dbColumn est_administrateur
	 * @param string $est_administrateur
	 */
	public function setEstAdministrateur($est_administrateur) {
		$this->__set('est_administrateur', $est_administrateur);
	}
	
	/**
	 * The getter for the "est_client" column.
	 *
	 * @dbType int
	 * @dbColumn est_client
	 * @return string
	 */
	public function getEstClient(){
		return $this->__get('est_client');
	}
	
	/**
	 * The setter for the "est_client" column.
	 *
	 * @dbColumn est_client
	 * @param string $est_client
	 */
	public function setEstClient($est_client) {
		$this->__set('est_client', $est_client);
	}
	
	/**
	 * The getter for the "created_at" column.
	 * It is returned as a PHP timestamp.
	 *
	 * @dbType datetime
	 * @dbColumn created_at
	 * @return timestamp
	 */
	public function getCreatedAt(){
		$date = $this->__get('created_at');
		if($date === null)
			return null;
		else
			return strtotime($date);
	}
	
	/**
	 * The setter for the "created_at" column.
	 * It must be provided as a PHP timestamp.
	 *
	 * @dbColumn created_at
	 * @param timestamp $created_at
	 */
	public function setCreatedAt($created_at) {
		if($created_at === null)
			$this->__set('created_at', null);
		else
			$this->__set('created_at', date("Y-m-d H:i:s", $created_at));
	}
	
	/**
	 * The getter for the "updated_at" column.
	 * It is returned as a PHP timestamp.
	 *
	 * @dbType timestamp
	 * @dbColumn updated_at
	 * @return timestamp
	 */
	public function getUpdatedAt(){
		$date = $this->__get('updated_at');
		if($date === null)
			return null;
		else
			return strtotime($date);
	}
	
	/**
	 * The setter for the "updated_at" column.
	 * It must be provided as a PHP timestamp.
	 *
	 * @dbColumn updated_at
	 * @param timestamp $updated_at
	 */
	public function setUpdatedAt($updated_at) {
		if($updated_at === null)
			$this->__set('updated_at', null);
		else
			$this->__set('updated_at', date("Y-m-d H:i:s", $updated_at));
	}
	
}
?>